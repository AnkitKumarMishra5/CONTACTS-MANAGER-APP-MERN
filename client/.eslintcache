[{"C:\\Users\\Ankit Kumar Mishra\\Documents\\Learning\\Contacts-Manager\\client\\src\\index.js":"1","C:\\Users\\Ankit Kumar Mishra\\Documents\\Learning\\Contacts-Manager\\client\\src\\App.js":"2","C:\\Users\\Ankit Kumar Mishra\\Documents\\Learning\\Contacts-Manager\\client\\src\\components\\Contacts\\Contacts.js":"3","C:\\Users\\Ankit Kumar Mishra\\Documents\\Learning\\Contacts-Manager\\client\\src\\components\\NewContact\\NewContact.js":"4","C:\\Users\\Ankit Kumar Mishra\\Documents\\Learning\\Contacts-Manager\\client\\src\\components\\Contacts\\Contact\\Contact.js":"5"},{"size":219,"mtime":1611088376941,"results":"6","hashOfConfig":"7"},{"size":2312,"mtime":1611235972510,"results":"8","hashOfConfig":"7"},{"size":2094,"mtime":1611236011521,"results":"9","hashOfConfig":"7"},{"size":4128,"mtime":1611234924631,"results":"10","hashOfConfig":"7"},{"size":1940,"mtime":1611231903243,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"11nsb91",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\Ankit Kumar Mishra\\Documents\\Learning\\Contacts-Manager\\client\\src\\index.js",[],["24","25"],"C:\\Users\\Ankit Kumar Mishra\\Documents\\Learning\\Contacts-Manager\\client\\src\\App.js",[],"C:\\Users\\Ankit Kumar Mishra\\Documents\\Learning\\Contacts-Manager\\client\\src\\components\\Contacts\\Contacts.js",[],"C:\\Users\\Ankit Kumar Mishra\\Documents\\Learning\\Contacts-Manager\\client\\src\\components\\NewContact\\NewContact.js",["26"],"import { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form, InputGroup } from \"react-bootstrap\";\r\n\r\nconst NewContact = (props) => {\r\n  const [newContact, setNewContact] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    mobile: \"\",\r\n    favourite: false,\r\n  });\r\n  const [nameError, setNameError] = useState(true);\r\n  const [emailError, setEmailError] = useState(true);\r\n  const [mobileError, setMobileError] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setNewContact(props.editContact);\r\n    console.log(props.editContact);\r\n  }, [props.editContact]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.onHide();\r\n    props.props.updateContacts(newContact, props.editContact._id);\r\n    setNewContact({\r\n      name: \"\",\r\n      email: \"\",\r\n      mobile: \"\",\r\n      favourite: false,\r\n    })\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Add New Contact\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              value={newContact.name}\r\n              onChange={(e) =>\r\n                e.target.value !== '' ?\r\n                (setNewContact({ ...newContact, name: e.target.value }), setNameError(false)):\r\n                setNameError(true)\r\n              }\r\n            />\r\n            {nameError &&\r\n            <Form.Text className=\"text-muted\">\r\n              Invalid Name! Contact won't be saved!\r\n            </Form.Text>}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Email</Form.Label>\r\n            <InputGroup>\r\n              <Form.Control\r\n                style={{width: \"100%\"}}\r\n                required\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={newContact.email}\r\n                onChange={(e) =>\r\n                  /^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/.test(e.target.value) ? \r\n                  (setNewContact({ ...newContact, email: e.target.value }), setEmailError(false)): setEmailError(true)\r\n                }\r\n              />\r\n              {emailError &&\r\n              <Form.Text className=\"text-muted\" >\r\n                Invalid Email! Contact won't be saved!\r\n              </Form.Text>}\r\n            </InputGroup>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Mobile</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name=\"mobile\"\r\n              type=\"text\"\r\n              placeholder=\"Mobile\"\r\n              value={newContact.mobile}\r\n              onChange={(e) =>\r\n                /^(\\+91[\\-\\s]?)?[0]?(91)?[789]\\d{9}$/.test(e.target.value) ?\r\n                (setNewContact({ ...newContact, mobile: e.target.value }), setMobileError(false)) : setMobileError(true)\r\n              }\r\n            />\r\n            {mobileError &&\r\n            <Form.Text className=\"text-muted\">\r\n              Invalid Mobile No.! Contact won't be saved!\r\n            </Form.Text>}\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicCheckbox\">\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              label=\"Set as Favourite\"\r\n              checked={newContact.favourite}\r\n              onInput={(e) =>\r\n                setNewContact({\r\n                  ...newContact,\r\n                  favourite: !newContact.favourite,\r\n                })\r\n              }\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\nexport default NewContact;\r\n","C:\\Users\\Ankit Kumar Mishra\\Documents\\Learning\\Contacts-Manager\\client\\src\\components\\Contacts\\Contact\\Contact.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":95,"column":25,"nodeType":"33","messageId":"34","endLine":95,"endColumn":26,"suggestions":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["38","39"],"no-global-assign","no-unsafe-negation",{"messageId":"40","fix":"41","desc":"42"},{"messageId":"43","fix":"44","desc":"45"},"removeEscape",{"range":"46","text":"47"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"48","text":"49"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[3023,3024],"",[3023,3023],"\\"]